#include <metal_stdlib>
#include <simd/simd.h>

using namespace metal;

struct type_Local
{
    float4x4 viewProjectionMat;
    float4x4 invViewMat;
    float4x4 invProjectionMat;
};

struct main0_out
{
    float4 out_var_SV_Target0 [[color(0)]];
    float gl_FragDepth [[depth(any)]];
};

struct main0_in
{
    float3 in_var_TEXCOORD0 [[user(locn0)]];
    float3 in_var_TEXCOORD1 [[user(locn1)]];
};

fragment main0_out main0(main0_in in [[stage_in]], constant type_Local& Local [[buffer(0)]])
{
    main0_out out = {};
    float3 _35 = in.in_var_TEXCOORD1 - in.in_var_TEXCOORD0;
    float _40 = (-in.in_var_TEXCOORD0.y) / _35.y;
    float3 _42 = in.in_var_TEXCOORD0 + (_35 * _40);
    if (_40 < 0.0)
    {
        discard_fragment();
    }
    float2 _47 = _42.xz * 1.0;
    float2 _53 = abs(fract(_47 - float2(0.5)) - float2(0.5)) / fwidth(_47);
    if (precise::min(_53.x, _53.y) < 1.0)
    {
        discard_fragment();
    }
    float4 _66 = Local.viewProjectionMat * float4(_42, 1.0);
    out.out_var_SV_Target0 = float4(0.100000001490116119384765625, 0.0, 0.100000001490116119384765625, 1.0);
    out.gl_FragDepth = _66.z / _66.w;
    return out;
}

